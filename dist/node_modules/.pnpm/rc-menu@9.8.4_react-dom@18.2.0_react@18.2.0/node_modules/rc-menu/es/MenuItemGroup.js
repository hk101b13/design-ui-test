import _extends from "../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import _objectWithoutProperties from "../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";
import classNames from "../../../../classnames@2.3.2/node_modules/classnames/index.js";
import omit from "../../../../rc-util@5.38.1_react-dom@18.2.0_react@18.2.0/node_modules/rc-util/es/omit.js";
import * as React from "react";
import { MenuContext } from "./context/MenuContext.js";
import { useFullPath, useMeasure } from "./context/PathContext.js";
import { parseChildren } from "./utils/nodeUtil.js";
var _excluded = ["className", "title", "eventKey", "children"], _excluded2 = ["children"];
var InternalMenuItemGroup = function InternalMenuItemGroup2(_ref) {
  var className = _ref.className, title = _ref.title;
  _ref.eventKey;
  var children = _ref.children, restProps = _objectWithoutProperties(_ref, _excluded);
  var _React$useContext = React.useContext(MenuContext), prefixCls = _React$useContext.prefixCls;
  var groupPrefixCls = "".concat(prefixCls, "-item-group");
  return /* @__PURE__ */ React.createElement("li", _extends({
    role: "presentation"
  }, restProps, {
    onClick: function onClick(e) {
      return e.stopPropagation();
    },
    className: classNames(groupPrefixCls, className)
  }), /* @__PURE__ */ React.createElement("div", {
    role: "presentation",
    className: "".concat(groupPrefixCls, "-title"),
    title: typeof title === "string" ? title : void 0
  }, title), /* @__PURE__ */ React.createElement("ul", {
    role: "group",
    className: "".concat(groupPrefixCls, "-list")
  }, children));
};
function MenuItemGroup(_ref2) {
  var children = _ref2.children, props = _objectWithoutProperties(_ref2, _excluded2);
  var connectedKeyPath = useFullPath(props.eventKey);
  var childList = parseChildren(children, connectedKeyPath);
  var measure = useMeasure();
  if (measure) {
    return childList;
  }
  return /* @__PURE__ */ React.createElement(InternalMenuItemGroup, omit(props, ["warnKey"]), childList);
}
export {
  MenuItemGroup as default
};
