import _objectWithoutProperties from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js";
import _objectSpread2 from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js";
import * as React from "react";
import useMemo from "../../../../../rc-util@5.38.1_react-dom@18.2.0_react@18.2.0/node_modules/rc-util/es/hooks/useMemo.js";
import isEqual from "../../../../../rc-util@5.38.1_react-dom@18.2.0_react@18.2.0/node_modules/rc-util/es/isEqual.js";
var _excluded = ["children", "locked"];
var MenuContext = /* @__PURE__ */ React.createContext(null);
function mergeProps(origin, target) {
  var clone = _objectSpread2({}, origin);
  Object.keys(target).forEach(function(key) {
    var value = target[key];
    if (value !== void 0) {
      clone[key] = value;
    }
  });
  return clone;
}
function InheritableContextProvider(_ref) {
  var children = _ref.children, locked = _ref.locked, restProps = _objectWithoutProperties(_ref, _excluded);
  var context = React.useContext(MenuContext);
  var inheritableContext = useMemo(function() {
    return mergeProps(context, restProps);
  }, [context, restProps], function(prev, next) {
    return !locked && (prev[0] !== next[0] || !isEqual(prev[1], next[1], true));
  });
  return /* @__PURE__ */ React.createElement(MenuContext.Provider, {
    value: inheritableContext
  }, children);
}
export {
  MenuContext,
  InheritableContextProvider as default
};
