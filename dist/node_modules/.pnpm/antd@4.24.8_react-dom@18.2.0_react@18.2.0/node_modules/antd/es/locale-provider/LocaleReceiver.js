import _extends from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import * as React from "react";
import LocaleContext from "./context.js";
import defaultLocale from "../locale/default.js";
var LocaleReceiver = function LocaleReceiver2(props) {
  var _props$componentName = props.componentName, componentName = _props$componentName === void 0 ? "global" : _props$componentName, defaultLocale$1 = props.defaultLocale, children = props.children;
  var antLocale = React.useContext(LocaleContext);
  var getLocale = React.useMemo(function() {
    var _a;
    var locale = defaultLocale$1 || defaultLocale[componentName];
    var localeFromContext = (_a = antLocale === null || antLocale === void 0 ? void 0 : antLocale[componentName]) !== null && _a !== void 0 ? _a : {};
    return _extends(_extends({}, locale instanceof Function ? locale() : locale), localeFromContext || {});
  }, [componentName, defaultLocale$1, antLocale]);
  var getLocaleCode = React.useMemo(function() {
    var localeCode = antLocale && antLocale.locale;
    if (antLocale && antLocale.exist && !localeCode) {
      return defaultLocale.locale;
    }
    return localeCode;
  }, [antLocale]);
  return children(getLocale, getLocaleCode, antLocale);
};
const LocaleReceiver$1 = LocaleReceiver;
export {
  LocaleReceiver$1 as default
};
