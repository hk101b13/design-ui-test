import _extends from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import _defineProperty from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js";
import classNames from "../../../../../classnames@2.3.2/node_modules/classnames/index.js";
import toArray from "../../../../../rc-util@5.38.1_react-dom@18.2.0_react@18.2.0/node_modules/rc-util/es/Children/toArray.js";
import * as React from "react";
import "../../../../../rc-field-form@1.27.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-field-form/es/index.js";
import { ConfigContext } from "../config-provider/context.js";
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SpaceCompactItemContext = /* @__PURE__ */ React.createContext(null);
var useCompactItemContext = function useCompactItemContext2(prefixCls, direction) {
  var compactItemContext = React.useContext(SpaceCompactItemContext);
  var compactItemClassnames = React.useMemo(function() {
    var _classNames;
    if (!compactItemContext)
      return "";
    var compactDirection = compactItemContext.compactDirection, isFirstItem = compactItemContext.isFirstItem, isLastItem = compactItemContext.isLastItem;
    var separator = compactDirection === "vertical" ? "-vertical-" : "-";
    return classNames((_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-compact").concat(separator, "item"), true), _defineProperty(_classNames, "".concat(prefixCls, "-compact").concat(separator, "first-item"), isFirstItem), _defineProperty(_classNames, "".concat(prefixCls, "-compact").concat(separator, "last-item"), isLastItem), _defineProperty(_classNames, "".concat(prefixCls, "-compact").concat(separator, "item-rtl"), direction === "rtl"), _classNames));
  }, [prefixCls, direction, compactItemContext]);
  return {
    compactSize: compactItemContext === null || compactItemContext === void 0 ? void 0 : compactItemContext.compactSize,
    compactDirection: compactItemContext === null || compactItemContext === void 0 ? void 0 : compactItemContext.compactDirection,
    compactItemClassnames
  };
};
var NoCompactStyle = function NoCompactStyle2(_ref) {
  var children = _ref.children;
  return /* @__PURE__ */ React.createElement(SpaceCompactItemContext.Provider, {
    value: null
  }, children);
};
var CompactItem = function CompactItem2(_a) {
  var children = _a.children, otherProps = __rest(_a, ["children"]);
  return /* @__PURE__ */ React.createElement(SpaceCompactItemContext.Provider, {
    value: otherProps
  }, children);
};
var Compact = function Compact2(props) {
  var _classNames2;
  var _React$useContext = React.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls, directionConfig = _React$useContext.direction;
  var _props$size = props.size, size = _props$size === void 0 ? "middle" : _props$size, direction = props.direction, block = props.block, customizePrefixCls = props.prefixCls, className = props.className, children = props.children, restProps = __rest(props, ["size", "direction", "block", "prefixCls", "className", "children"]);
  var prefixCls = getPrefixCls("space-compact", customizePrefixCls);
  var clx = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, "".concat(prefixCls, "-rtl"), directionConfig === "rtl"), _defineProperty(_classNames2, "".concat(prefixCls, "-block"), block), _defineProperty(_classNames2, "".concat(prefixCls, "-vertical"), direction === "vertical"), _classNames2), className);
  var compactItemContext = React.useContext(SpaceCompactItemContext);
  var childNodes = toArray(children);
  var nodes = React.useMemo(function() {
    return childNodes.map(function(child, i) {
      var key = child && child.key || "".concat(prefixCls, "-item-").concat(i);
      return /* @__PURE__ */ React.createElement(CompactItem, {
        key,
        compactSize: size,
        compactDirection: direction,
        isFirstItem: i === 0 && (!compactItemContext || (compactItemContext === null || compactItemContext === void 0 ? void 0 : compactItemContext.isFirstItem)),
        isLastItem: i === childNodes.length - 1 && (!compactItemContext || (compactItemContext === null || compactItemContext === void 0 ? void 0 : compactItemContext.isLastItem))
      }, child);
    });
  }, [size, childNodes, compactItemContext]);
  if (childNodes.length === 0) {
    return null;
  }
  return /* @__PURE__ */ React.createElement("div", _extends({
    className: clx
  }, restProps), nodes);
};
export {
  NoCompactStyle,
  SpaceCompactItemContext,
  Compact as default,
  useCompactItemContext
};
