import _extends from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import _defineProperty from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js";
import classNames from "../../../../../classnames@2.3.2/node_modules/classnames/index.js";
import * as React from "react";
import { useContext, useMemo } from "react";
import "../../../../../rc-field-form@1.27.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-field-form/es/index.js";
import { ConfigContext } from "../config-provider/context.js";
import { FormItemInputContext } from "../form/context.js";
var Group = function Group2(props) {
  var _classNames;
  var _useContext = useContext(ConfigContext), getPrefixCls = _useContext.getPrefixCls, direction = _useContext.direction;
  var customizePrefixCls = props.prefixCls, _props$className = props.className, className = _props$className === void 0 ? "" : _props$className;
  var prefixCls = getPrefixCls("input-group", customizePrefixCls);
  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-lg"), props.size === "large"), _defineProperty(_classNames, "".concat(prefixCls, "-sm"), props.size === "small"), _defineProperty(_classNames, "".concat(prefixCls, "-compact"), props.compact), _defineProperty(_classNames, "".concat(prefixCls, "-rtl"), direction === "rtl"), _classNames), className);
  var formItemContext = useContext(FormItemInputContext);
  var groupFormItemContext = useMemo(function() {
    return _extends(_extends({}, formItemContext), {
      isFormItemInput: false
    });
  }, [formItemContext]);
  return /* @__PURE__ */ React.createElement("span", {
    className: cls,
    style: props.style,
    onMouseEnter: props.onMouseEnter,
    onMouseLeave: props.onMouseLeave,
    onFocus: props.onFocus,
    onBlur: props.onBlur
  }, /* @__PURE__ */ React.createElement(FormItemInputContext.Provider, {
    value: groupFormItemContext
  }, props.children));
};
const Group$1 = Group;
export {
  Group$1 as default
};
