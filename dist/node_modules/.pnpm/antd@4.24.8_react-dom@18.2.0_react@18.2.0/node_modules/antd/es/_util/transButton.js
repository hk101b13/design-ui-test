import _extends from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import KeyCode from "../../../../../rc-util@5.38.1_react-dom@18.2.0_react@18.2.0/node_modules/rc-util/es/KeyCode.js";
import * as React from "react";
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var inlineStyle = {
  border: 0,
  background: "transparent",
  padding: 0,
  lineHeight: "inherit",
  display: "inline-block"
};
var TransButton = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  var onKeyDown = function onKeyDown2(event) {
    var keyCode = event.keyCode;
    if (keyCode === KeyCode.ENTER) {
      event.preventDefault();
    }
  };
  var onKeyUp = function onKeyUp2(event) {
    var keyCode = event.keyCode;
    var onClick = props.onClick;
    if (keyCode === KeyCode.ENTER && onClick) {
      onClick();
    }
  };
  var style = props.style, noStyle = props.noStyle, disabled = props.disabled, restProps = __rest(props, ["style", "noStyle", "disabled"]);
  var mergedStyle = {};
  if (!noStyle) {
    mergedStyle = _extends({}, inlineStyle);
  }
  if (disabled) {
    mergedStyle.pointerEvents = "none";
  }
  mergedStyle = _extends(_extends({}, mergedStyle), style);
  return /* @__PURE__ */ React.createElement("div", _extends({
    role: "button",
    tabIndex: 0,
    ref
  }, restProps, {
    onKeyDown,
    onKeyUp,
    style: mergedStyle
  }));
});
const TransButton$1 = TransButton;
export {
  TransButton$1 as default
};
