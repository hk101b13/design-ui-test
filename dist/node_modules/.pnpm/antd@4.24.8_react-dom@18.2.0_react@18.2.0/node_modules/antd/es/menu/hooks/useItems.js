import _extends from "../../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import _typeof from "../../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/typeof.js";
import "../../../../../../rc-menu@9.8.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-menu/es/index.js";
import * as React from "react";
import MenuDivider from "../MenuDivider.js";
import MenuItem from "../MenuItem.js";
import SubMenu from "../SubMenu.js";
import MenuItemGroup from "../../../../../../rc-menu@9.8.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-menu/es/MenuItemGroup.js";
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
function convertItemsToNodes(list) {
  return (list || []).map(function(opt, index) {
    if (opt && _typeof(opt) === "object") {
      var _a = opt, label = _a.label, children = _a.children, key = _a.key, type = _a.type, restProps = __rest(_a, ["label", "children", "key", "type"]);
      var mergedKey = key !== null && key !== void 0 ? key : "tmp-".concat(index);
      if (children || type === "group") {
        if (type === "group") {
          return /* @__PURE__ */ React.createElement(MenuItemGroup, _extends({
            key: mergedKey
          }, restProps, {
            title: label
          }), convertItemsToNodes(children));
        }
        return /* @__PURE__ */ React.createElement(SubMenu, _extends({
          key: mergedKey
        }, restProps, {
          title: label
        }), convertItemsToNodes(children));
      }
      if (type === "divider") {
        return /* @__PURE__ */ React.createElement(MenuDivider, _extends({
          key: mergedKey
        }, restProps));
      }
      return /* @__PURE__ */ React.createElement(MenuItem, _extends({
        key: mergedKey
      }, restProps), label);
    }
    return null;
  }).filter(function(opt) {
    return opt;
  });
}
function useItems(items) {
  return React.useMemo(function() {
    if (!items) {
      return items;
    }
    return convertItemsToNodes(items);
  }, [items]);
}
export {
  useItems as default
};
