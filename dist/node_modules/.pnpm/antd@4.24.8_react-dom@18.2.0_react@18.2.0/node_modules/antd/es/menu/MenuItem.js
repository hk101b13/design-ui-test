import _defineProperty from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js";
import _extends from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import _classCallCheck from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";
import _createClass from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/createClass.js";
import _inherits from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/inherits.js";
import _createSuper from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/createSuper.js";
import classNames from "../../../../../classnames@2.3.2/node_modules/classnames/index.js";
import "../../../../../rc-menu@9.8.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-menu/es/index.js";
import toArray from "../../../../../rc-util@5.38.1_react-dom@18.2.0_react@18.2.0/node_modules/rc-util/es/Children/toArray.js";
import * as React from "react";
import { SiderContext } from "../layout/Sider.js";
import Tooltip from "../tooltip/index.js";
import { cloneElement, isValidElement } from "../_util/reactNode.js";
import MenuContext from "./MenuContext.js";
import MenuItem$1 from "../../../../../rc-menu@9.8.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-menu/es/MenuItem.js";
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var MenuItem = /* @__PURE__ */ function(_React$Component) {
  _inherits(MenuItem2, _React$Component);
  var _super = _createSuper(MenuItem2);
  function MenuItem2() {
    var _this;
    _classCallCheck(this, MenuItem2);
    _this = _super.apply(this, arguments);
    _this.renderItem = function(_ref) {
      var _classNames;
      var siderCollapsed = _ref.siderCollapsed;
      var _a;
      var _this$context = _this.context, prefixCls = _this$context.prefixCls, firstLevel = _this$context.firstLevel, inlineCollapsed = _this$context.inlineCollapsed, direction = _this$context.direction, disableMenuItemTitleTooltip = _this$context.disableMenuItemTitleTooltip;
      var _this$props = _this.props, className = _this$props.className, children = _this$props.children;
      var _b = _this.props, title = _b.title, icon = _b.icon, danger = _b.danger, rest = __rest(_b, ["title", "icon", "danger"]);
      var tooltipTitle = title;
      if (typeof title === "undefined") {
        tooltipTitle = firstLevel ? children : "";
      } else if (title === false) {
        tooltipTitle = "";
      }
      var tooltipProps = {
        title: tooltipTitle
      };
      if (!siderCollapsed && !inlineCollapsed) {
        tooltipProps.title = null;
        tooltipProps.open = false;
      }
      var childrenLength = toArray(children).length;
      var returnNode = /* @__PURE__ */ React.createElement(MenuItem$1, _extends({}, rest, {
        className: classNames((_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-item-danger"), danger), _defineProperty(_classNames, "".concat(prefixCls, "-item-only-child"), (icon ? childrenLength + 1 : childrenLength) === 1), _classNames), className),
        title: typeof title === "string" ? title : void 0
      }), cloneElement(icon, {
        className: classNames(isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : "", "".concat(prefixCls, "-item-icon"))
      }), _this.renderItemChildren(inlineCollapsed));
      if (!disableMenuItemTitleTooltip) {
        returnNode = /* @__PURE__ */ React.createElement(Tooltip, _extends({}, tooltipProps, {
          placement: direction === "rtl" ? "left" : "right",
          overlayClassName: "".concat(prefixCls, "-inline-collapsed-tooltip")
        }), returnNode);
      }
      return returnNode;
    };
    return _this;
  }
  _createClass(MenuItem2, [{
    key: "renderItemChildren",
    value: function renderItemChildren(inlineCollapsed) {
      var _this$context2 = this.context, prefixCls = _this$context2.prefixCls, firstLevel = _this$context2.firstLevel;
      var _this$props2 = this.props, icon = _this$props2.icon, children = _this$props2.children;
      var wrapNode = /* @__PURE__ */ React.createElement("span", {
        className: "".concat(prefixCls, "-title-content")
      }, children);
      if (!icon || isValidElement(children) && children.type === "span") {
        if (children && inlineCollapsed && firstLevel && typeof children === "string") {
          return /* @__PURE__ */ React.createElement("div", {
            className: "".concat(prefixCls, "-inline-collapsed-noicon")
          }, children.charAt(0));
        }
      }
      return wrapNode;
    }
  }, {
    key: "render",
    value: function render() {
      return /* @__PURE__ */ React.createElement(SiderContext.Consumer, null, this.renderItem);
    }
  }]);
  return MenuItem2;
}(React.Component);
MenuItem.contextType = MenuContext;
export {
  MenuItem as default
};
