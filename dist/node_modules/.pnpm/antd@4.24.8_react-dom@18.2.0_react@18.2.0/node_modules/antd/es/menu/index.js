import _classCallCheck from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";
import _createClass from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/createClass.js";
import _inherits from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/inherits.js";
import _createSuper from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/createSuper.js";
import _extends from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import EllipsisOutlined from "../../../../../@ant-design_icons@4.8.1_react-dom@18.2.0_react@18.2.0/node_modules/@ant-design/icons/es/icons/EllipsisOutlined.js";
import classNames from "../../../../../classnames@2.3.2/node_modules/classnames/index.js";
import ExportMenu from "../../../../../rc-menu@9.8.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-menu/es/index.js";
import useEvent from "../../../../../rc-util@5.38.1_react-dom@18.2.0_react@18.2.0/node_modules/rc-util/es/hooks/useEvent.js";
import omit from "../../../../../rc-util@5.38.1_react-dom@18.2.0_react@18.2.0/node_modules/rc-util/es/omit.js";
import * as React from "react";
import { forwardRef } from "react";
import "../../../../../rc-field-form@1.27.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-field-form/es/index.js";
import { ConfigContext } from "../config-provider/context.js";
import { SiderContext } from "../layout/Sider.js";
import collapseMotion from "../_util/motion.js";
import { cloneElement } from "../_util/reactNode.js";
import warning from "../_util/warning.js";
import useItems from "./hooks/useItems.js";
import MenuContext from "./MenuContext.js";
import MenuDivider from "./MenuDivider.js";
import MenuItem from "./MenuItem.js";
import OverrideContext from "./OverrideContext.js";
import SubMenu from "./SubMenu.js";
import MenuItemGroup from "../../../../../rc-menu@9.8.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-menu/es/MenuItemGroup.js";
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var InternalMenu = /* @__PURE__ */ forwardRef(function(props, ref) {
  var _a;
  var override = React.useContext(OverrideContext) || {};
  var _React$useContext = React.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls, getPopupContainer = _React$useContext.getPopupContainer, direction = _React$useContext.direction;
  var rootPrefixCls = getPrefixCls();
  var customizePrefixCls = props.prefixCls, className = props.className, _props$theme = props.theme, theme = _props$theme === void 0 ? "light" : _props$theme, expandIcon = props.expandIcon, _internalDisableMenuItemTitleTooltip = props._internalDisableMenuItemTitleTooltip, inlineCollapsed = props.inlineCollapsed, siderCollapsed = props.siderCollapsed, items = props.items, children = props.children, mode = props.mode, selectable = props.selectable, onClick = props.onClick, restProps = __rest(props, ["prefixCls", "className", "theme", "expandIcon", "_internalDisableMenuItemTitleTooltip", "inlineCollapsed", "siderCollapsed", "items", "children", "mode", "selectable", "onClick"]);
  var passedProps = omit(restProps, ["collapsedWidth"]);
  var mergedChildren = useItems(items) || children;
  process.env.NODE_ENV !== "production" ? warning(!("inlineCollapsed" in props && mode !== "inline"), "Menu", "`inlineCollapsed` should only be used when `mode` is inline.") : void 0;
  process.env.NODE_ENV !== "production" ? warning(!(props.siderCollapsed !== void 0 && "inlineCollapsed" in props), "Menu", "`inlineCollapsed` not control Menu under Sider. Should set `collapsed` on Sider instead.") : void 0;
  process.env.NODE_ENV !== "production" ? warning("items" in props && !children, "Menu", "`children` will be removed in next major version. Please use `items` instead.") : void 0;
  (_a = override.validator) === null || _a === void 0 ? void 0 : _a.call(override, {
    mode
  });
  var onItemClick = useEvent(function() {
    var _a2;
    onClick === null || onClick === void 0 ? void 0 : onClick.apply(void 0, arguments);
    (_a2 = override === null || override === void 0 ? void 0 : override.onClick) === null || _a2 === void 0 ? void 0 : _a2.call(override);
  });
  var mergedMode = override.mode || mode;
  var mergedSelectable = selectable !== null && selectable !== void 0 ? selectable : override.selectable;
  var mergedInlineCollapsed = React.useMemo(function() {
    if (siderCollapsed !== void 0) {
      return siderCollapsed;
    }
    return inlineCollapsed;
  }, [inlineCollapsed, siderCollapsed]);
  var defaultMotions = {
    horizontal: {
      motionName: "".concat(rootPrefixCls, "-slide-up")
    },
    inline: collapseMotion,
    other: {
      motionName: "".concat(rootPrefixCls, "-zoom-big")
    }
  };
  var prefixCls = getPrefixCls("menu", customizePrefixCls || override.prefixCls);
  var menuClassName = classNames("".concat(prefixCls, "-").concat(theme), className);
  var mergedExpandIcon;
  if (typeof expandIcon === "function") {
    mergedExpandIcon = expandIcon;
  } else {
    mergedExpandIcon = cloneElement(expandIcon || override.expandIcon, {
      className: "".concat(prefixCls, "-submenu-expand-icon")
    });
  }
  var contextValue = React.useMemo(function() {
    return {
      prefixCls,
      inlineCollapsed: mergedInlineCollapsed || false,
      antdMenuTheme: theme,
      direction,
      firstLevel: true,
      disableMenuItemTitleTooltip: _internalDisableMenuItemTitleTooltip
    };
  }, [prefixCls, mergedInlineCollapsed, theme, direction, _internalDisableMenuItemTitleTooltip]);
  return /* @__PURE__ */ React.createElement(OverrideContext.Provider, {
    value: null
  }, /* @__PURE__ */ React.createElement(MenuContext.Provider, {
    value: contextValue
  }, /* @__PURE__ */ React.createElement(ExportMenu, _extends({
    getPopupContainer,
    overflowedIndicator: /* @__PURE__ */ React.createElement(EllipsisOutlined, null),
    overflowedIndicatorPopupClassName: "".concat(prefixCls, "-").concat(theme),
    mode: mergedMode,
    selectable: mergedSelectable,
    onClick: onItemClick
  }, passedProps, {
    inlineCollapsed: mergedInlineCollapsed,
    className: menuClassName,
    prefixCls,
    direction,
    defaultMotions,
    expandIcon: mergedExpandIcon,
    ref
  }), mergedChildren)));
});
var Menu = /* @__PURE__ */ function(_React$Component) {
  _inherits(Menu2, _React$Component);
  var _super = _createSuper(Menu2);
  function Menu2() {
    var _this;
    _classCallCheck(this, Menu2);
    _this = _super.apply(this, arguments);
    _this.focus = function(options) {
      var _a;
      (_a = _this.menu) === null || _a === void 0 ? void 0 : _a.focus(options);
    };
    return _this;
  }
  _createClass(Menu2, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      return /* @__PURE__ */ React.createElement(SiderContext.Consumer, null, function(context) {
        return /* @__PURE__ */ React.createElement(InternalMenu, _extends({
          ref: function ref(node) {
            _this2.menu = node;
          }
        }, _this2.props, context));
      });
    }
  }]);
  return Menu2;
}(React.Component);
Menu.Divider = MenuDivider;
Menu.Item = MenuItem;
Menu.SubMenu = SubMenu;
Menu.ItemGroup = MenuItemGroup;
const Menu$1 = Menu;
export {
  Menu$1 as default
};
