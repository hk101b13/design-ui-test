import _extends from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import _defineProperty from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js";
import DeleteOutlined from "../../../../../@ant-design_icons@4.8.1_react-dom@18.2.0_react@18.2.0/node_modules/@ant-design/icons/es/icons/DeleteOutlined.js";
import classNames from "../../../../../classnames@2.3.2/node_modules/classnames/index.js";
import * as React from "react";
import Checkbox from "../checkbox/index.js";
import LocaleReceiver from "../locale-provider/LocaleReceiver.js";
import defaultLocale from "../locale/default.js";
import TransButton from "../_util/transButton.js";
var ListItem = function ListItem2(props) {
  var _classNames;
  var renderedText = props.renderedText, renderedEl = props.renderedEl, item = props.item, checked = props.checked, disabled = props.disabled, prefixCls = props.prefixCls, onClick = props.onClick, onRemove = props.onRemove, showRemove = props.showRemove;
  var className = classNames((_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-content-item"), true), _defineProperty(_classNames, "".concat(prefixCls, "-content-item-disabled"), disabled || item.disabled), _defineProperty(_classNames, "".concat(prefixCls, "-content-item-checked"), checked), _classNames));
  var title;
  if (typeof renderedText === "string" || typeof renderedText === "number") {
    title = String(renderedText);
  }
  return /* @__PURE__ */ React.createElement(LocaleReceiver, {
    componentName: "Transfer",
    defaultLocale: defaultLocale.Transfer
  }, function(contextLocale) {
    var liProps = {
      className,
      title
    };
    var labelNode = /* @__PURE__ */ React.createElement("span", {
      className: "".concat(prefixCls, "-content-item-text")
    }, renderedEl);
    if (showRemove) {
      return /* @__PURE__ */ React.createElement("li", _extends({}, liProps), labelNode, /* @__PURE__ */ React.createElement(TransButton, {
        disabled: disabled || item.disabled,
        className: "".concat(prefixCls, "-content-item-remove"),
        "aria-label": contextLocale.remove,
        onClick: function onClick2() {
          onRemove === null || onRemove === void 0 ? void 0 : onRemove(item);
        }
      }, /* @__PURE__ */ React.createElement(DeleteOutlined, null)));
    }
    liProps.onClick = disabled || item.disabled ? void 0 : function() {
      return onClick(item);
    };
    return /* @__PURE__ */ React.createElement("li", _extends({}, liProps), /* @__PURE__ */ React.createElement(Checkbox, {
      className: "".concat(prefixCls, "-checkbox"),
      checked,
      disabled: disabled || item.disabled
    }), labelNode);
  });
};
const ListItem$1 = /* @__PURE__ */ React.memo(ListItem);
export {
  ListItem$1 as default
};
