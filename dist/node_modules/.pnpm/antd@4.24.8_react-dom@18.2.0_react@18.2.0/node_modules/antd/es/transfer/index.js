import _defineProperty from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js";
import _toConsumableArray from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js";
import _extends from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/extends.js";
import _classCallCheck from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/classCallCheck.js";
import _createClass from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/createClass.js";
import _inherits from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/inherits.js";
import _createSuper from "../../../../../@babel_runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/createSuper.js";
import classNames from "../../../../../classnames@2.3.2/node_modules/classnames/index.js";
import * as React from "react";
import "../../../../../rc-field-form@1.27.4_react-dom@18.2.0_react@18.2.0/node_modules/rc-field-form/es/index.js";
import LocaleReceiver from "../locale-provider/LocaleReceiver.js";
import defaultLocale from "../locale/default.js";
import { ConfigConsumer } from "../config-provider/context.js";
import defaultRenderEmpty from "../config-provider/defaultRenderEmpty.js";
import { FormItemInputContext } from "../form/context.js";
import { getStatusClassNames, getMergedStatus } from "../_util/statusUtils.js";
import warning from "../_util/warning.js";
import TransferList from "./list.js";
import Operation from "./operation.js";
import Search from "./search.js";
var Transfer = /* @__PURE__ */ function(_React$Component) {
  _inherits(Transfer2, _React$Component);
  var _super = _createSuper(Transfer2);
  function Transfer2(props) {
    var _this;
    _classCallCheck(this, Transfer2);
    _this = _super.call(this, props);
    _this.separatedDataSource = null;
    _this.setStateKeys = function(direction, keys) {
      if (direction === "left") {
        _this.setState(function(_ref) {
          var sourceSelectedKeys = _ref.sourceSelectedKeys;
          return {
            sourceSelectedKeys: typeof keys === "function" ? keys(sourceSelectedKeys || []) : keys
          };
        });
      } else {
        _this.setState(function(_ref2) {
          var targetSelectedKeys = _ref2.targetSelectedKeys;
          return {
            targetSelectedKeys: typeof keys === "function" ? keys(targetSelectedKeys || []) : keys
          };
        });
      }
    };
    _this.getLocale = function(transferLocale, renderEmpty) {
      var _this$props$locale = _this.props.locale, locale = _this$props$locale === void 0 ? {} : _this$props$locale;
      return _extends(_extends(_extends({}, transferLocale), {
        notFoundContent: renderEmpty("Transfer")
      }), locale);
    };
    _this.moveTo = function(direction) {
      var _this$props = _this.props, _this$props$targetKey = _this$props.targetKeys, targetKeys2 = _this$props$targetKey === void 0 ? [] : _this$props$targetKey, _this$props$dataSourc = _this$props.dataSource, dataSource = _this$props$dataSourc === void 0 ? [] : _this$props$dataSourc, onChange = _this$props.onChange;
      var _this$state = _this.state, sourceSelectedKeys = _this$state.sourceSelectedKeys, targetSelectedKeys = _this$state.targetSelectedKeys;
      var moveKeys = direction === "right" ? sourceSelectedKeys : targetSelectedKeys;
      var newMoveKeys = moveKeys.filter(function(key) {
        return !dataSource.some(function(data) {
          return !!(key === data.key && data.disabled);
        });
      });
      var newTargetKeys = direction === "right" ? newMoveKeys.concat(targetKeys2) : targetKeys2.filter(function(targetKey) {
        return !newMoveKeys.includes(targetKey);
      });
      var oppositeDirection = direction === "right" ? "left" : "right";
      _this.setStateKeys(oppositeDirection, []);
      _this.handleSelectChange(oppositeDirection, []);
      onChange === null || onChange === void 0 ? void 0 : onChange(newTargetKeys, direction, newMoveKeys);
    };
    _this.moveToLeft = function() {
      return _this.moveTo("left");
    };
    _this.moveToRight = function() {
      return _this.moveTo("right");
    };
    _this.onItemSelectAll = function(direction, selectedKeys2, checkAll) {
      _this.setStateKeys(direction, function(prevKeys) {
        var mergedCheckedKeys = [];
        if (checkAll) {
          mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(prevKeys), _toConsumableArray(selectedKeys2))));
        } else {
          mergedCheckedKeys = prevKeys.filter(function(key) {
            return !selectedKeys2.includes(key);
          });
        }
        _this.handleSelectChange(direction, mergedCheckedKeys);
        return mergedCheckedKeys;
      });
    };
    _this.onLeftItemSelectAll = function(selectedKeys2, checkAll) {
      return _this.onItemSelectAll("left", selectedKeys2, checkAll);
    };
    _this.onRightItemSelectAll = function(selectedKeys2, checkAll) {
      return _this.onItemSelectAll("right", selectedKeys2, checkAll);
    };
    _this.handleFilter = function(direction, e) {
      var onSearch = _this.props.onSearch;
      var value = e.target.value;
      onSearch === null || onSearch === void 0 ? void 0 : onSearch(direction, value);
    };
    _this.handleLeftFilter = function(e) {
      return _this.handleFilter("left", e);
    };
    _this.handleRightFilter = function(e) {
      return _this.handleFilter("right", e);
    };
    _this.handleClear = function(direction) {
      var onSearch = _this.props.onSearch;
      onSearch === null || onSearch === void 0 ? void 0 : onSearch(direction, "");
    };
    _this.handleLeftClear = function() {
      return _this.handleClear("left");
    };
    _this.handleRightClear = function() {
      return _this.handleClear("right");
    };
    _this.onItemSelect = function(direction, selectedKey, checked) {
      var _this$state2 = _this.state, sourceSelectedKeys = _this$state2.sourceSelectedKeys, targetSelectedKeys = _this$state2.targetSelectedKeys;
      var holder = direction === "left" ? _toConsumableArray(sourceSelectedKeys) : _toConsumableArray(targetSelectedKeys);
      var index = holder.indexOf(selectedKey);
      if (index > -1) {
        holder.splice(index, 1);
      }
      if (checked) {
        holder.push(selectedKey);
      }
      _this.handleSelectChange(direction, holder);
      if (!_this.props.selectedKeys) {
        _this.setStateKeys(direction, holder);
      }
    };
    _this.onLeftItemSelect = function(selectedKey, checked) {
      return _this.onItemSelect("left", selectedKey, checked);
    };
    _this.onRightItemSelect = function(selectedKey, checked) {
      return _this.onItemSelect("right", selectedKey, checked);
    };
    _this.onRightItemRemove = function(selectedKeys2) {
      var _this$props2 = _this.props, _this$props2$targetKe = _this$props2.targetKeys, targetKeys2 = _this$props2$targetKe === void 0 ? [] : _this$props2$targetKe, onChange = _this$props2.onChange;
      _this.setStateKeys("right", []);
      onChange === null || onChange === void 0 ? void 0 : onChange(targetKeys2.filter(function(key) {
        return !selectedKeys2.includes(key);
      }), "left", _toConsumableArray(selectedKeys2));
    };
    _this.handleScroll = function(direction, e) {
      var onScroll = _this.props.onScroll;
      onScroll === null || onScroll === void 0 ? void 0 : onScroll(direction, e);
    };
    _this.handleLeftScroll = function(e) {
      return _this.handleScroll("left", e);
    };
    _this.handleRightScroll = function(e) {
      return _this.handleScroll("right", e);
    };
    _this.handleListStyle = function(listStyle, direction) {
      if (typeof listStyle === "function") {
        return listStyle({
          direction
        });
      }
      return listStyle;
    };
    var _props$selectedKeys = props.selectedKeys, selectedKeys = _props$selectedKeys === void 0 ? [] : _props$selectedKeys, _props$targetKeys = props.targetKeys, targetKeys = _props$targetKeys === void 0 ? [] : _props$targetKeys;
    _this.state = {
      sourceSelectedKeys: selectedKeys.filter(function(key) {
        return !targetKeys.includes(key);
      }),
      targetSelectedKeys: selectedKeys.filter(function(key) {
        return targetKeys.includes(key);
      })
    };
    return _this;
  }
  _createClass(Transfer2, [{
    key: "getTitles",
    value: function getTitles(transferLocale) {
      var _a, _b;
      return (_b = (_a = this.props.titles) !== null && _a !== void 0 ? _a : transferLocale.titles) !== null && _b !== void 0 ? _b : [];
    }
  }, {
    key: "handleSelectChange",
    value: function handleSelectChange(direction, holder) {
      var _this$state3 = this.state, sourceSelectedKeys = _this$state3.sourceSelectedKeys, targetSelectedKeys = _this$state3.targetSelectedKeys;
      var onSelectChange = this.props.onSelectChange;
      if (!onSelectChange) {
        return;
      }
      if (direction === "left") {
        onSelectChange(holder, targetSelectedKeys);
      } else {
        onSelectChange(sourceSelectedKeys, holder);
      }
    }
  }, {
    key: "separateDataSource",
    value: function separateDataSource() {
      var _this$props3 = this.props, _this$props3$dataSour = _this$props3.dataSource, dataSource = _this$props3$dataSour === void 0 ? [] : _this$props3$dataSour, rowKey = _this$props3.rowKey, _this$props3$targetKe = _this$props3.targetKeys, targetKeys = _this$props3$targetKe === void 0 ? [] : _this$props3$targetKe;
      var leftDataSource = [];
      var rightDataSource = new Array(targetKeys.length);
      dataSource.forEach(function(record) {
        if (rowKey) {
          record = _extends(_extends({}, record), {
            key: rowKey(record)
          });
        }
        var indexOfKey = targetKeys.indexOf(record.key);
        if (indexOfKey !== -1) {
          rightDataSource[indexOfKey] = record;
        } else {
          leftDataSource.push(record);
        }
      });
      return {
        leftDataSource,
        rightDataSource
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      return /* @__PURE__ */ React.createElement(LocaleReceiver, {
        componentName: "Transfer",
        defaultLocale: defaultLocale.Transfer
      }, function(contextLocale) {
        return /* @__PURE__ */ React.createElement(ConfigConsumer, null, function(_ref3) {
          var getPrefixCls = _ref3.getPrefixCls, renderEmpty = _ref3.renderEmpty, direction = _ref3.direction;
          return /* @__PURE__ */ React.createElement(FormItemInputContext.Consumer, null, function(_ref4) {
            var _classNames;
            var hasFeedback = _ref4.hasFeedback, contextStatus = _ref4.status;
            var _this2$props = _this2.props, customizePrefixCls = _this2$props.prefixCls, className = _this2$props.className, disabled = _this2$props.disabled, _this2$props$operatio = _this2$props.operations, operations = _this2$props$operatio === void 0 ? [] : _this2$props$operatio, _this2$props$showSear = _this2$props.showSearch, showSearch = _this2$props$showSear === void 0 ? false : _this2$props$showSear, footer = _this2$props.footer, style = _this2$props.style, _this2$props$listStyl = _this2$props.listStyle, listStyle = _this2$props$listStyl === void 0 ? {} : _this2$props$listStyl, operationStyle = _this2$props.operationStyle, filterOption = _this2$props.filterOption, render2 = _this2$props.render, children = _this2$props.children, showSelectAll = _this2$props.showSelectAll, oneWay = _this2$props.oneWay, pagination = _this2$props.pagination, customStatus = _this2$props.status;
            var prefixCls = getPrefixCls("transfer", customizePrefixCls);
            var locale = _this2.getLocale(contextLocale, renderEmpty || defaultRenderEmpty);
            var _this2$state = _this2.state, sourceSelectedKeys = _this2$state.sourceSelectedKeys, targetSelectedKeys = _this2$state.targetSelectedKeys;
            var mergedStatus = getMergedStatus(contextStatus, customStatus);
            var mergedPagination = !children && pagination;
            var _this2$separateDataSo = _this2.separateDataSource(), leftDataSource = _this2$separateDataSo.leftDataSource, rightDataSource = _this2$separateDataSo.rightDataSource;
            var leftActive = targetSelectedKeys.length > 0;
            var rightActive = sourceSelectedKeys.length > 0;
            var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-disabled"), disabled), _defineProperty(_classNames, "".concat(prefixCls, "-customize-list"), !!children), _defineProperty(_classNames, "".concat(prefixCls, "-rtl"), direction === "rtl"), _classNames), getStatusClassNames(prefixCls, mergedStatus, hasFeedback), className);
            var titles = _this2.getTitles(locale);
            var selectAllLabels = _this2.props.selectAllLabels || [];
            return /* @__PURE__ */ React.createElement("div", {
              className: cls,
              style
            }, /* @__PURE__ */ React.createElement(TransferList, _extends({
              prefixCls: "".concat(prefixCls, "-list"),
              titleText: titles === null || titles === void 0 ? void 0 : titles[0],
              dataSource: leftDataSource,
              filterOption,
              style: _this2.handleListStyle(listStyle, "left"),
              checkedKeys: sourceSelectedKeys,
              handleFilter: _this2.handleLeftFilter,
              handleClear: _this2.handleLeftClear,
              onItemSelect: _this2.onLeftItemSelect,
              onItemSelectAll: _this2.onLeftItemSelectAll,
              render: render2,
              showSearch,
              renderList: children,
              footer,
              onScroll: _this2.handleLeftScroll,
              disabled,
              direction: direction === "rtl" ? "right" : "left",
              showSelectAll,
              selectAllLabel: selectAllLabels[0],
              pagination: mergedPagination
            }, locale)), /* @__PURE__ */ React.createElement(Operation, {
              className: "".concat(prefixCls, "-operation"),
              rightActive,
              rightArrowText: operations[0],
              moveToRight: _this2.moveToRight,
              leftActive,
              leftArrowText: operations[1],
              moveToLeft: _this2.moveToLeft,
              style: operationStyle,
              disabled,
              direction,
              oneWay
            }), /* @__PURE__ */ React.createElement(TransferList, _extends({
              prefixCls: "".concat(prefixCls, "-list"),
              titleText: titles === null || titles === void 0 ? void 0 : titles[1],
              dataSource: rightDataSource,
              filterOption,
              style: _this2.handleListStyle(listStyle, "right"),
              checkedKeys: targetSelectedKeys,
              handleFilter: _this2.handleRightFilter,
              handleClear: _this2.handleRightClear,
              onItemSelect: _this2.onRightItemSelect,
              onItemSelectAll: _this2.onRightItemSelectAll,
              onItemRemove: _this2.onRightItemRemove,
              render: render2,
              showSearch,
              renderList: children,
              footer,
              onScroll: _this2.handleRightScroll,
              disabled,
              direction: direction === "rtl" ? "left" : "right",
              showSelectAll,
              selectAllLabel: selectAllLabels[1],
              showRemove: oneWay,
              pagination: mergedPagination
            }, locale)));
          });
        });
      });
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(_ref5) {
      var selectedKeys = _ref5.selectedKeys, targetKeys = _ref5.targetKeys, pagination = _ref5.pagination, children = _ref5.children;
      if (selectedKeys) {
        var mergedTargetKeys = targetKeys || [];
        return {
          sourceSelectedKeys: selectedKeys.filter(function(key) {
            return !mergedTargetKeys.includes(key);
          }),
          targetSelectedKeys: selectedKeys.filter(function(key) {
            return mergedTargetKeys.includes(key);
          })
        };
      }
      process.env.NODE_ENV !== "production" ? warning(!pagination || !children, "Transfer", "`pagination` not support customize render list.") : void 0;
      return null;
    }
  }]);
  return Transfer2;
}(React.Component);
Transfer.List = TransferList;
Transfer.Operation = Operation;
Transfer.Search = Search;
const Transfer$1 = Transfer;
export {
  Transfer$1 as default
};
